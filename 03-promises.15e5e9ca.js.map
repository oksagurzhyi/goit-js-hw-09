{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAWC,SAASC,cAAc,SAExC,IAAIC,EAAO,CAAEC,MAAO,EAAGC,KAAM,EAAGC,OAAQ,GA+BxC,SAASC,EAAcC,EAAUJ,GAC/B,MAAMK,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACXC,YAAW,KACrBN,EACFI,EAAQ,C,SAAEL,E,MAAUJ,IAEpBU,EAAO,C,SAAEN,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAtCbJ,EAASgB,iBAAiB,UAC1B,SAAkBC,GAChBA,EAAEC,iBACF,MAAMC,EAAanB,EAASoB,SAAShB,MAAMiB,MACrCC,EAAYtB,EAASoB,SAASf,KAAKgB,MACnCE,EAAcvB,EAASoB,SAASd,OAAOe,MAC7ClB,EAAO,IACFA,EACHC,MAAOoB,OAAOL,GACdd,KAAMmB,OAAOF,GACbhB,OAAQkB,OAAOD,IAGjB,IAAK,IAAIE,EAAI,EAAGA,GAAKtB,EAAKG,OAAQmB,IAChClB,EAAckB,EAAGtB,EAAKC,OACnBsB,MAAK,EAAClB,SAAEA,EAAQJ,MAAEA,MACjBuB,EAAA7B,GAAS8B,OAAOC,QACd,uBAAqBrB,QAAiBJ,MAAU,IAGnD0B,OAAM,EAACtB,SAAEA,EAAQJ,MAAEA,MAClBuB,EAAA7B,GAAS8B,OAAOG,QACd,sBAAoBvB,QAAeJ,MAAU,IAGnDD,EAAKC,OAASoB,OAAOrB,EAAKE,MAE5BL,EAASgC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formElem = document.querySelector('.form');\n\nlet data = { delay: 0, step: 0, amount: 0 };\n\nformElem.addEventListener('submit', onSubmit);\nfunction onSubmit(e) {\n  e.preventDefault();\n  const delayValue = formElem.elements.delay.value;\n  const stepValue = formElem.elements.step.value;\n  const amountValue = formElem.elements.amount.value;\n  data = {\n    ...data,\n    delay: Number(delayValue),\n    step: Number(stepValue),\n    amount: Number(amountValue),\n  };\n\n  for (let i = 1; i <= data.amount; i++) {\n    createPromise(i, data.delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    data.delay += Number(data.step);\n  }\n  formElem.reset();\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    const timerId = setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formElem","document","querySelector","$47d4ff9957288465$var$data","delay","step","amount","$47d4ff9957288465$var$createPromise","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","e","preventDefault","delayValue","elements","value","stepValue","amountValue","Number","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.15e5e9ca.js.map"}